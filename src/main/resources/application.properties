
##Spring dataSource (DataSourceAutoConfiguration)
#spring.datasource.url= jdbc:postgresql://localhost:5432/cac_vas_db
#spring.datasource.username= postgres
#spring.datasource.password= 1234
#spring.datasource.url= jdbc:mysql://localhost:3306/TODODB?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.url= jdbc:postgresql://41.207.248.243:5432/cac_live_staging
spring.datasource.username= postgres
spring.datasource.password= Oasis_123@@!!!##
server.port=9001
##Hibernate Properties
##The sql dialect makes hibernate generate better sql for chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect

##Hibernate ddl use (create, create-drop, validate, update)
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
spring.main.allow-circular-references = true

#spring.jackson.serialization.fail-on-self-references=false

#Cloudinary properties
cloudinary_name:
dwwpp4esc
cloudinary_api_key:
951837282891627
cloudinary_api_secret:
N4b_g91WqXEHhDIAojN7i9y12mg

#SALT KEY FOR PASSWORD HASHING
app.secret-salt=${SECRET_SALT:$2a$05$exvD/f0p5It9udNe1wxZ2O}

#JWT SECRETE KEY
app.jwt-secret=${JWT_SECRET:stateIRSVALIDATIONHS256}
app.jwt-expiration=${JWT_EXPIRATION:86400}

#Mail verification properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#your_email_address
spring.mail.username=cacvas6@gmail.com
#your_email_password
spring.mail.password=ijyvvgklvaxskzuc
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

app.base-url=http://localhost:9001

#PAYSTACK
pay.stack.url = https://api.paystack.co/
paystack_secret_key:
sk_test_00a46d45ddc6f130000e02c63def4fd09bdc588d


pay.stack.public.key: pk_test_c93d4b839812135720ab8614dcafd0d3c9accdaa

PASSWORD=atumar4031

